{"version":3,"sources":["components/Navbar/navbar.js","components/Footer/footer.js","pages/Home.js","pages/leistungen.js","pages/aboutus.js","pages/marketing.js","pages/datenschutzerklaerung.js","pages/impressum.js","pages/error.js","App.js","serviceWorker.js","index.js"],"names":["document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","getElementById","classList","toggle","Navbar","className","role","aria-label","to","aria-expanded","data-target","aria-hidden","id","activeClassName","href","React","Component","Footer","Home","Helmet","charSet","rel","Leistungen","AboutUs","Marketing","Datenschutzerklaerung","Impressum","Error","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e95cc563.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // Get all \"navbar-burger\" elements\r\n    const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\r\n  \r\n    // Check if there are any navbar burgers\r\n    if ($navbarBurgers.length > 0) {\r\n      // Add a click event on each of them\r\n      $navbarBurgers.forEach( el => {\r\n        el.addEventListener('click', () => {\r\n  \r\n          // Get the target from the \"data-target\" attribute\r\n          const target = el.dataset.target;\r\n          const $target = document.getElementById(target);\r\n  \r\n          // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n          el.classList.toggle('is-active');\r\n          $target.classList.toggle('is-active');\r\n        });\r\n      });\r\n    }\r\n  \r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n                    <div className=\"container\">\r\n                    <div className=\"navbar-brand\">\r\n                    <NavLink to='/'  className=\"navbar-item\"><b>Enval</b></NavLink>\r\n                    <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"EnvalNavbar\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    </a>\r\n                    </div>\r\n                    <div id=\"EnvalNavbar\" className=\"navbar-menu\">\r\n                    <div className=\"navbar-start\">\r\n                    <NavLink className=\"navbar-item\"  to='/'>Startseite</NavLink>\r\n                    <NavLink className=\"navbar-item\" activeClassName=\"selected\" to='/digitale-leistungen' > Digitale Leistungen</NavLink>\r\n                    <NavLink className=\"navbar-item\" activeClassName=\"selected\" to=\"/marketing\">Marketing</NavLink>\r\n                    \r\n                   \r\n                    <a href=\"/blog\" className=\"navbar-item\">\r\n                    Blog\r\n                    </a>\r\n                    <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                    <a className=\"navbar-link\">\r\n                    Verwaltung\r\n                    </a>\r\n                    <div className=\"navbar-dropdown\">\r\n                    <a className=\"navbar-item\">\r\n                    About\r\n                    </a>\r\n                    <a className=\"navbar-item\">\r\n                    Jobs\r\n                    </a>\r\n                    <a className=\"navbar-item\">\r\n                    Contact\r\n                    </a>\r\n                    <hr className=\"navbar-divider\" />\r\n                    <a className=\"navbar-item\">\r\n                    Report an issue\r\n                    </a>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"navbar-end\">\r\n                    <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                    <a className=\"navbar-link\">\r\n                    <div className=\"icons-inline\">\r\n                    <span className=\"material-icons icons-inline-mr\">\r\n                    settings\r\n                    </span>\r\n                    CustomerService\r\n                    </div>\r\n                    </a>\r\n                    <div className=\"navbar-dropdown\">\r\n                    <a className=\"navbar-item\">\r\n                    About\r\n                    </a>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                    </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (   \r\n            <div className=\"footer\">\r\n            <section className=\"section\">\r\n                <div className=\"container\">\r\n                    <h2 className=\"title has-text-weight-bold\">Kontaktieren Sie uns</h2>\r\n                    <p className=\"subtitle\">\r\n                        Erhalten Sie Ihr individuelles Angebot\r\n                    </p>\r\n                    <ul>\r\n                        <li><i className=\"lni lni-phone\"></i> <b>Telefon:</b> +49 123456789</li>\r\n                        <li>\r\n                            <i className=\"lni lni-envelope\"></i> <b>Mail:</b> info@enval.de\r\n                        </li>\r\n                    </ul>\r\n                    <br />\r\n                    <p className=\"title is-6\">Link-Verzeichnis</p>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/impressum\">Impressum</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/datenschutzerklaerung\">Datenschutzerkl√§rung</Link>\r\n                        </li>\r\n                       \r\n                    </ul>\r\n                </div>\r\n            </section>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Home = () => {\r\n    return <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Das ist das Marketing</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>Startseite</h1>\r\n    </div>\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Leistungen = () => {\r\n    return         <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Das sind die Digitalen Leistungen der Enval Group</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>Digitale Leistungen</h1>\r\n    </div>\r\n};\r\n\r\nexport default Leistungen;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst AboutUs = () => {\r\n    return <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>About us</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>About us</h1>\r\n    </div>\r\n};\r\n\r\nexport default AboutUs;","import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Marketing = () => {\r\n    return <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Das ist das Marketing</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>Marketing</h1>\r\n    </div>\r\n};\r\n\r\nexport default Marketing;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Datenschutzerklaerung = () => {\r\n    return <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Das ist die Datenschutzerklaerung</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>Das ist die Datenschutzerklaerung</h1>\r\n    </div>\r\n};\r\n\r\nexport default Datenschutzerklaerung;","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Impressum = () => {\r\n    return <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Das ist das Impressum</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>Das ist das Impressum</h1>\r\n    </div>\r\n};\r\n\r\nexport default Impressum;","import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Error = () => {\r\n    return <div className=\"application\">\r\n    <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Auf der Seite ist ein Fehler aufgetreten</title>\r\n        <link rel=\"canonical\" href=\"http://mysite.com/example\" />\r\n    </Helmet>\r\n    <h1>Error 404</h1>\r\n    </div>\r\n};\r\n\r\nexport default Error;","import React from 'react';\n\n\nimport '../node_modules/bulma/css/bulma.min.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar/navbar';\nimport Footer from './components/Footer/footer';\n\n//Pages\nimport Home from './pages/Home';\nimport Leistungen from './pages/leistungen';\nimport AboutUs from './pages/aboutus';\nimport Marketing from './pages/marketing';\nimport Datenschutzerklaerung from './pages/datenschutzerklaerung';\nimport Impressum from './pages/impressum';\nimport Error from './pages/error';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Navbar />\n        \n\n        <Switch>\n          <Route exact path='/' component= {Home}/>\n          <Route exact path='/about' component= {AboutUs}/>\n          <Route exact path='/digitale-leistungen' component={Leistungen}/>\n          <Route exact path='/marketing' component={Marketing}/>\n          <Route exact path='/datenschutzerklaerung' component={Datenschutzerklaerung}/>\n          <Route exact path='/impressum' component={Impressum}/>\n          <Route component={Error}/>\n        </Switch>\n\n        <Footer />\n\n        \n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); \n  "],"sourceRoot":""}